// <auto-generated />
using System;
using Library.Api.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Api.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12");

            modelBuilder.Entity("Library.Api.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a6aaa2f-e826-4da2-8c20-d44e509766d4"),
                            BirthDate = new DateTimeOffset(new DateTime(1960, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            BirthPlace = "中国香港",
                            Email = "author1@deali.cn",
                            Name = "Author 1"
                        },
                        new
                        {
                            Id = new Guid("971b4133-798d-48b7-a81e-9ef0255f05e5"),
                            BirthDate = new DateTimeOffset(new DateTime(1970, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            BirthPlace = "London, England",
                            Email = "author2@deali.cn",
                            Name = "Author 2"
                        });
                });

            modelBuilder.Entity("Library.Api.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<int>("Pages")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a29ae9a-550b-4640-9db8-ed12d2610ed7"),
                            AuthorId = new Guid("0a6aaa2f-e826-4da2-8c20-d44e509766d4"),
                            Description = "Description of Book 1",
                            Pages = 281,
                            Title = "Book 1"
                        },
                        new
                        {
                            Id = new Guid("c432b62b-93e5-4e61-8864-505f215ba355"),
                            AuthorId = new Guid("971b4133-798d-48b7-a81e-9ef0255f05e5"),
                            Description = "Description of Book 2",
                            Pages = 382,
                            Title = "Book 2"
                        },
                        new
                        {
                            Id = new Guid("0e602ccd-2bf2-44de-a345-3e6eb21dd1c5"),
                            AuthorId = new Guid("0a6aaa2f-e826-4da2-8c20-d44e509766d4"),
                            Description = "Description of Book 3",
                            Pages = 404,
                            Title = "Book 3"
                        },
                        new
                        {
                            Id = new Guid("9f19cad3-81cc-4688-a5f6-8ff1a53ef298"),
                            AuthorId = new Guid("971b4133-798d-48b7-a81e-9ef0255f05e5"),
                            Description = "Description of Book 4",
                            Pages = 501,
                            Title = "Book 4"
                        },
                        new
                        {
                            Id = new Guid("b0e5cb7b-bbd5-4b09-9054-5425bcc3e0d3"),
                            AuthorId = new Guid("0a6aaa2f-e826-4da2-8c20-d44e509766d4"),
                            Description = "Description of Book 5",
                            Pages = 320,
                            Title = "Book 5"
                        });
                });

            modelBuilder.Entity("Library.Api.Entities.Book", b =>
                {
                    b.HasOne("Library.Api.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
